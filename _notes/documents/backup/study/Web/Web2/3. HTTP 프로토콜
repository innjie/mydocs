# HTTP 프로토콜
- 팀 버너스 리 박사에 의해 개발된 `HTTP`는 하이퍼텍스트 문서(`HTML`)를 전송하기 위해 사용
- OSI 7계층 중 `응용 계층`에 해당한다.

## 버전
### HTTP/0.9
HTML만을 받아오며, 정식 사양이 아니다. `GET` 메소드만 지원한다.

### HTTP/1.0
RFC1945가 발행됨. `POST`, `HEAD 메소드`, `헤더` 지원.
요청의 결과를 알 수 있는 상태코드 추가. 
각 요청마다 새로운 연결을 맺고 끊는 비효율적인 `비 연결지향 (Connectionless) 방식`으로 성능이 떨어진다.

### HTTP/1.0+
`Keep-Alive Connection`을 지원하여 여러번 커넥션이 생기는 설계의 문제를 해결함

### HTTP/1.1
현재 가장 많이 사용되는 버전.
HTTP의 설계상 문제들을 해결하고 성능 최적화.
기본적으로 지속 연결이 활성화되어 있다. 모든 요청이 끝나면 `Connection: close` 헤더를 통해 연결 종료를 알린다.
기존 REST 메소드 이외에도 `OPTIONS`, `PUT`, `DELETE` 등이 추가되었다.

### HTTP/2.0
멀티플렉싱 스트림, 헤더 압축, 서버 푸시 등의 기능 추가.

<hr>

# TCP/IP 통신
대부분의 네트워크 통신은 TCP/IP 기반으로 한다.
`IP`를 통해 물리적 호스트 대상을 찾고, `port`로 논리적 대상을 찾는다.

# 연결 관리 방식
> 비 지속 연결 (Non-Persistent Connection)
HTTP 0.9 ~ 1.0
초기 웹은 단순히 문서를 전달하는 방식으로 연결이 필요하지 않았다. 따라서 한번의 요청과 응답 후에 연결이 해제되었다.

> 지속 연결 (Persistent Connection)
HTTP 1.0+ ~ 2.0
`3-way handshaking` 을 통해 여러 번의 요청과 응답이 이루어지고, 시간이 단축된다.


# 메시지 구조
HTTP 메시지로 웹 브라우저가 요청할 때 보내는 메시지를 `요청 메시지(Request Message)`라고 부르고, 
웹 서버가 HTTP 요청 메시지를 받고 응답할 때 보내는 메시지를 `응답 메시지 (Response Message)`라고 부른다.

## 개행 문자
텍스트의 한 줄이 끝남을 표시하는 문자(열). 웹에서는 `CR(/r) + LF(/n)`를 개행 문자로 사용하도록 규정하고 있다. 
개행 문자를 기준으로 데이터 식별한다.

## 요청 메시지
`메소드`, `요청 URL`, `버전` 포함. 
- 메시지 헤더 : 요청의 속성과 추가 정보들 포함
- 메시지 바디 : 엔티티 바디, 메시지 데이터 포함, 데이터 수송 목적 설계

## 응답 메시지
`버전`, `상태 코드`, `응답 문구` 포함
- 메시지 헤더 : 응답 속성, 추가 정보
- 메시지 바디 : 엔티티 바디

# HTTP 상태 코드
클라이언트가 요청할 때 서버 측에서 보내는 상세 결과.
3자리 숫자로 구성되어 있고, 응답 문구가 포함된다.

## HTTP 메시지 헤더
메시지를 구성하는 요소로 클라이언트와 서버가 `할 일`과 `처리하기 위한 정보`가 포함된다.
헤더 종류는 (일반, 요청, 응답, 엔티티, 확장) 으로 총 5개이다.



